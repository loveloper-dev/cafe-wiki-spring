<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duzon.lulu.menu.mapper.MenuMapper">

<!--  <select id="getMenuList" parameterType="hashmap" resultType="hashmap">-->
<!--    SELECT menu_idx, brand_idx, menu_nm_ko, menu_nm_en, menu_desc, menu_allergy, menu_has_caffeine, menu_img_url-->
<!--    FROM menu-->
<!--  </select>-->

  <select id="getMenuList" parameterType="hashmap" resultType="hashmap">
      SELECT *
      FROM (
              SELECT m.menu_idx, b.brand_nm_en, m.menu_nm_ko, m.menu_nm_en,
                      m.menu_allergy, m.menu_has_caffeine, m.menu_img_url,
                      COALESCE((
                      SELECT TO_CHAR(AVG(star_rating.star_rating), 'FM9.0')
                      FROM star_rating
                      WHERE menu_idx = m.menu_idx
                      GROUP BY menu_idx
                      ), '0.0') as menu_star_rating,
                      <choose>
                          <when test='user_idx != null and user_idx neq ""'>
                              (
                                  SELECT
                                          CASE
                                          WHEN count(menu_idx) > 0
                                          THEN true
                                          ELSE false
                                          END AS is_clicked_heart
                                  FROM heart_rating
                                  WHERE user_idx = #{user_idx}
                                  AND menu_idx = m.menu_idx
                              ) AS is_clicked_heart
                          </when>
                          <otherwise>
                              false AS is_clicked_heart
                          </otherwise>
                      </choose>
              FROM menu m JOIN brand b
              ON (m.brand_idx = b.brand_idx)
              WHERE 1=1
              <if test='brand_idx != null and brand_idx != 0'>
                  AND m.brand_idx = #{brand_idx}
              </if>
              <if test='keyword != null and keyword neq ""'>
                  AND (
                  m.menu_nm_ko like '%' || #{keyword} || '%'
                  OR
                  LOWER(m.menu_nm_en) like '%' || LOWER(#{keyword}) || '%'
                  )
              </if>
      ) "outer"
      -- isShowOnlyHeartDrink 가 true면 heart 체크한 음료만 보게 하기
      <if test='isShowOnlyHeartDrink != null and isShowOnlyHeartDrink.equals(true)'>
         WHERE is_clicked_heart = true
      </if>
      ORDER BY menu_nm_ko collate "ko_KR.utf8"
  </select>

  <select id="getMenu" parameterType="hashmap" resultType="hashmap">
      SELECT m.menu_idx, b.brand_nm_en, m.menu_nm_ko, m.menu_nm_en, m.menu_desc,
             m.menu_allergy, m.menu_has_caffeine, m.menu_img_url,
             COALESCE((
                          SELECT TO_CHAR(AVG(star_rating.star_rating), 'FM9.0')
                          FROM star_rating
                          WHERE menu_idx = m.menu_idx
                          GROUP BY menu_idx
                      ), '0.0') AS menu_star_rating,
             (
                 SELECT count(*)
                 FROM heart_rating
                 WHERE menu_idx = #{menu_idx}
             ) AS menu_heart_rating,
              <choose>
                  <when test='user_idx != null and user_idx neq ""'>
                      (
                          SELECT
                                  CASE
                                  WHEN count(menu_idx) > 0
                                  THEN true
                                  ELSE false
                                  END AS is_clicked_heart
                          FROM heart_rating
                          WHERE user_idx = #{user_idx}
                          AND menu_idx = #{menu_idx}
                      ) AS is_clicked_heart,
                      (
                          SELECT CASE
                                  WHEN COUNT(star_rating) > 0
                                  THEN true
                                  ELSE false
                                  END
                          FROM star_rating
                          WHERE user_idx = #{user_idx}
                          AND menu_idx = #{menu_idx}
                      ) AS is_clicked_star
                  </when>
                  <otherwise>
                      false AS is_clicked_heart,
                      false AS is_clicked_star
                  </otherwise>
              </choose>
      FROM menu m JOIN brand b
                    ON (m.brand_idx = b.brand_idx)
      WHERE menu_idx = #{menu_idx}
  </select>

</mapper>